#!/usr/bin/env ruby

print '
    Created by Blockchain IT,
    If you need Fullstack, Blockchain or DevOps services
    contact us on info@blockchain-it.hr

    Happy hacking ;)
    Edi

'

require 'yaml'
require 'erb'

# generic variables
@config = YAML.load_file('environment.yaml')
@nodes = @config['nodes']
@bootnodes = @config['bootnodes']

#####################################################################
# Create config files for each node
#####################################################################

def set_node_template_vars(values)
    @Eth_Etherbase = values['geth']['Eth_Etherbase']
    @Node_UserIdent = values['geth']['Node_UserIdent']
    @Node_DataDir = values['geth']['Node_DataDir']
    @Node_HTTPPort = values['geth']['Node_HTTPPort']
    @Node_WSPort = values['geth']['Node_WSPort']
    @NodeP2P_ListenAddr = values['geth']['NodeP2P_ListenAddr']
    @NodeP2P_DiscoveryAddr = values['geth']['NodeP2P_DiscoveryAddr']
    @Dashboard_Port = values['geth']['Dashboard_Port']
    @Dashboard_Refresh = values['geth']['Dashboard_Refresh']
    @nodePort_rpc = values['k8s']['nodePort_rpc']
    @nodePort_ipc = values['k8s']['nodePort_ipc']
    @replicas = values['k8s']['replicas']
    return
end

#####################################################################
# genesis
#####################################################################
File.open('genesis.json', 'w') do |f|
    f.puts ERB.new(File.read('erb/genesis.json.erb'), nil, '-').result
end


#####################################################################
# nodes
#####################################################################

@nodes.each do |node|
    set_node_template_vars(node.values.first)
    File.open("#{@Node_UserIdent}.toml", 'w') do |f|
        f.puts ERB.new(File.read('nodes/node.toml.erb'), nil, '-').result
    end
end

#####################################################################
# bootnodes
#####################################################################

@bootnodes.each do |bootnode|
    set_node_template_vars(bootnode.values.first)
    File.open("#{@Node_UserIdent}.toml", 'w') do |f|
        f.puts ERB.new(File.read('nodes/node.toml.erb'), nil, '-').result
    end
end

#####################################################################
# claims config
####################################################################
File.open('yaml/00_claims.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/00_claims.yaml.erb'), nil, '-').result
end


#####################################################################
# common config
#####################################################################
File.open('yaml/01_common-config.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/01_common-config.yaml.erb'), nil, '-').result
end

#####################################################################
# bootnodes config
#####################################################################
File.open('yaml/02_bootnodes.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/02_bootnodes.yaml.erb'), nil, '-').result
end


#####################################################################
# nodes config
#####################################################################
File.open('yaml/03_nodes.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/03_nodes.yaml.erb'), nil, '-').result
end

#####################################################################
# monitor config
#####################################################################
File.open('yaml/04_monitor.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/04_monitor.yaml.erb'), nil, '-').result
end

#####################################################################
# explorer config
#####################################################################
File.open('yaml/05_explorer.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/05_explorer.yaml.erb'), nil, '-').result
end

#####################################################################
# backend config
#####################################################################
File.open('yaml/06_backend.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/06_backend.yaml.erb'), nil, '-').result
end
