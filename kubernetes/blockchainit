#!/usr/bin/env ruby

require 'yaml'
require 'erb'

# generic variables
@config     = YAML.load_file('environment.yaml')
@nodes      = @config['nodes']
@bootnodes  = @config['bootnodes']

#####################################################################
# Create config files for each node
#####################################################################

def set_node_template_vars(values)
  @Eth_Etherbase         = values['geth']['Eth_Etherbase']
  @Node_UserIdent        = values['geth']['Node_UserIdent']
  @Node_DataDir          = values['geth']['Node_DataDir']
  @Node_HTTPPort         = values['geth']['Node_HTTPPort']
  @Node_WSPort           = values['geth']['Node_WSPort']
  @NodeP2P_ListenAddr    = values['geth']['NodeP2P_ListenAddr']
  @NodeP2P_DiscoveryAddr = values['geth']['NodeP2P_DiscoveryAddr']
  @Dashboard_Port        = values['geth']['Dashboard_Port']
  @Dashboard_Refresh     = values['geth']['Dashboard_Refresh']
  @nodePort_rpc          = values['k8s']['nodePort_rpc']
  @nodePort_ipc          = values['k8s']['nodePort_ipc']
  @replicas              = values['k8s']['replicas']
  return
end

#####################################################################
# genesis
#####################################################################
File.open('genesis.json', 'w') do |f|
  f.puts ERB.new(File.read('erb/genesis.json.erb'), nil, '-').result
end


#####################################################################
# nodes
#####################################################################

@nodes.each do |node|
  set_node_template_vars(node.values.first)
  File.open("#{@Node_UserIdent}.toml", 'w') do |f|
    f.puts ERB.new(File.read('nodes/node.toml.erb'), nil, '-').result
  end
end

#####################################################################
# bootnodes
#####################################################################

@bootnodes.each do |bootnode|
  set_node_template_vars(bootnode.values.first)
  File.open("#{@Node_UserIdent}.toml", 'w') do |f|
    f.puts ERB.new(File.read('nodes/node.toml.erb'), nil, '-').result
  end
end

#####################################################################
# claims config
####################################################################
File.open('yaml/claims.yaml', 'w') do |f|
  f.puts ERB.new(File.read('erb/claims.yaml.erb'), nil, '-').result
end


#####################################################################
# common config
#####################################################################
File.open('yaml/common-config.yaml', 'w') do |f|
  f.puts ERB.new(File.read('erb/common-config.yaml.erb'), nil, '-').result
end

#####################################################################
# nodes config
#####################################################################
File.open('yaml/nodes.yaml', 'w') do |f|
    f.puts ERB.new(File.read('erb/nodes.yaml.erb'), nil, '-').result
end

#####################################################################
# bootnodes config
#####################################################################
File.open('yaml/bootnodes.yaml', 'w') do |f|
  f.puts ERB.new(File.read('erb/bootnodes.yaml.erb'), nil, '-').result
end

#####################################################################
# monitor config
#####################################################################
File.open('yaml/monitor.yaml', 'w') do |f|
  f.puts ERB.new(File.read('erb/monitor.yaml.erb'), nil, '-').result
end

#####################################################################
# explorer config
#####################################################################
File.open('yaml/explorer.yaml', 'w') do |f|
  f.puts ERB.new(File.read('erb/explorer.yaml.erb'), nil, '-').result
end

#####################################################################
# backend config
#####################################################################
File.open('yaml/backend.yaml', 'w') do |f|
  f.puts ERB.new(File.read('erb/backend.yaml.erb'), nil, '-').result
end
