<%
def set_node_template_vars(values)
  @Eth_Etherbase         = values["geth"]["Eth_Etherbase"]
  @Eth_Password          = values["geth"]["Eth_Password"]
  @Node_UserIdent        = values["geth"]["Node_UserIdent"]
  @Node_DataDir          = values["geth"]["Node_DataDir"]
  @Node_HTTPPort         = values["geth"]["Node_HTTPPort"]
  @Node_WSPort           = values["geth"]["Node_WSPort"]
  @NodeP2P_ListenAddr    = values["geth"]["NodeP2P_ListenAddr"]
  @NodeP2P_DiscoveryAddr = values["geth"]["NodeP2P_DiscoveryAddr"]
  @Dashboard_Port        = values["geth"]["Dashboard_Port"]
  @Dashboard_Refresh     = values["geth"]["Dashboard_Refresh"]
  @nodePort_rpc          = values["k8s"]["nodePort_rpc"]
  @nodePort_ipc          = values["k8s"]["nodePort_ipc"]
  @replicas              = values["k8s"]["replicas"]
  return
end
-%>
<%- unless @config["keystore"]["secret"] -%>
<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node.values.first) -%>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keystore-config-<%= @Node_UserIdent %>
  namespace: default
  labels:
    app: kuberneteth
    name: keystore-config-<%= @Node_UserIdent %>
data:
  <%= @config["keystore"]["items"]["#{@Eth_Etherbase}"] %>: |-
<%- File.readlines("keystore/#{@config["keystore"]["items"]["#{@Eth_Etherbase}"]}").each do |line| -%>
    <%= line -%>
<% end -%>
<% end -%>
<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node.values.first) -%>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gethconfig-<%= @Node_UserIdent %>
  namespace: default
  labels:
    app: kuberneteth
    name: gethconfig-<%= @Node_UserIdent %>
data:
  gethconfig: |-
<%- File.readlines("#{@Node_UserIdent}.toml").each do |line| -%>
    <%= line -%>
<% end -%>
<% end %>
<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node.values.first) -%>
---
apiVersion: v1
kind: Service
metadata:
  name: <%= @Node_UserIdent %>-svc
  labels:
    app: kuberneteth
    tier: backend
    name: <%= @Node_UserIdent %>-svc
spec:
  selector:
    app: kuberneteth
    tier: backend
    name: <%= @Node_UserIdent %>
<%- if @nodePort_rpc || @nodePort_ipc -%>
  type: LoadBalancer
  externalTrafficPolicy: Cluster
<% end -%>
  ports:
    - name: <%= @Node_UserIdent %>-jsonrpc
      protocol: TCP
      port: <%= @Node_HTTPPort %>
      targetPort: <%= @Node_HTTPPort %>
<%- if @nodePort_rpc -%>
      nodePort: <%= @nodePort_rpc %>
<% end -%>
    - name: <%= @Node_UserIdent %>-wsrpc
      protocol: TCP
      port: <%= @Node_WSPort %>
      targetPort: <%= @Node_WSPort %>
<%- if @NodeP2P_ListenAddr -%>
    - name: <%= @Node_UserIdent %>-ipc-listen
      protocol: UDP
      port: <%= @NodeP2P_ListenAddr %>
      targetPort: <%= @NodeP2P_ListenAddr %>
<% end -%>
<%- if @NodeP2P_DiscoveryAddr -%>
    - name: <%= @Node_UserIdent %>-ipc-discovery
      protocol: TCP
      port: <%= @NodeP2P_DiscoveryAddr %>
      targetPort: <%= @NodeP2P_DiscoveryAddr %>
<%- if @nodePort_ipc -%>
      nodePort: <%= @nodePort_ipc %>
<% end -%>
<% end -%>
<%- if @Dashboard_Port -%>
    - name: <%= @Node_UserIdent %>-dashboard
      protocol: TCP
      port: <%= @Dashboard_Port %>
      targetPort: <%= @Dashboard_Port %>
<% end -%>
<% end -%>
<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node.values.first) -%>
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kuberneteth
    tier: backend
    name: geth-<%= @Node_UserIdent %>
  name: geth-<%= @Node_UserIdent %>
spec:
  selector:
    matchLabels:
      app: kuberneteth
  replicas: <%= @replicas %>
  serviceName: geth-<%= @Node_UserIdent %>
  template:
    metadata:
      name: geth-<%= @Node_UserIdent %>
      labels:
        app: kuberneteth
        tier: backend
        name: <%= @Node_UserIdent %>
    spec:
      containers:
      - name: <%= @Node_UserIdent %>-container
        image: ethereum/client-go:<%= @config["geth"]["version"] %>
        imagePullPolicy: Always
        command: [ "sh" ]
        args:
        - "-cx"
        - "/usr/local/bin/geth --datadir <%= @Node_DataDir %> init /etc/geth/genesis/genesis-geth.json;
           touch <%= @Node_DataDir %>/genesis_created;
           echo <%= @Eth_Password %> > <%= @Node_DataDir %>/password.txt;
           mkdir -p /etc/geth/<%= @Node_UserIdent %>;
           cp /etc/gethconfigmap/<%= @Node_UserIdent %>/gethconfig.toml /etc/geth/<%= @Node_UserIdent %>;
<%- unless @config["geth"]["network"]["public"] -%>
           ENODE=$(cat /etc/testnet/bootnode/enode.address);
           ENODE_ESC=$(echo $ENODE | sed 's@//@\\\\/\\\\/@g');
           sed -i \"s/BootstrapNodes = \\[\\]/BootstrapNodes = [\\\"$ENODE_ESC\\\"]/g\" /etc/geth/<%= @Node_UserIdent %>/gethconfig.toml;
           sed -i \"s/BootstrapNodesV5 = \\[\\]/BootstrapNodesV5 = [\\\"$ENODE_ESC\\\"]/g\" /etc/geth/<%= @Node_UserIdent %>/gethconfig.toml;
<% end -%>
           /usr/local/bin/geth \
<%- if @Dashboard_Port || @Dashboard_Refresh -%>
           --dashboard \
<% end -%>
<%- if @Eth_Etherbase && @Eth_Password -%>
           --mine \
<% end -%>
           --verbosity <%= @config["geth"]["network"]["verbosity"] %>  \
<%- if @Eth_Etherbase && @Eth_Password -%>
           --unlock <%= @Eth_Etherbase %> --password <%= @Node_DataDir %>/password.txt --gasprice '0' --targetgaslimit '9000000000000' \
<% end -%>
           --config /etc/geth/<%= @Node_UserIdent %>/gethconfig.toml;"
        ports:
          - containerPort: <%= @Node_HTTPPort %>
          - containerPort: <%= @Node_WSPort %>
<%- if @NodeP2P_ListenAddr -%>
          - containerPort: <%= @NodeP2P_ListenAddr %>
<% end -%>
            protocol: UDP
<%- if @NodeP2P_DiscoveryAddr -%>
          - containerPort: <%= @NodeP2P_DiscoveryAddr %>
<% end -%>
        volumeMounts:
        - name: <%= @Node_UserIdent %>-persistent-storage
          mountPath: <%= @Node_DataDir %>
        - name: <%= @Node_UserIdent %>-config-persistent-storage
          mountPath: /etc/gethconfigmap/<%= @Node_UserIdent %>
        - name: keystore-config-persistent-storage
          mountPath: <%= @Node_DataDir %>/keystore/<%= @config["keystore"]["items"]["#{@Eth_Etherbase}"] %>
          subPath: <%= @config["keystore"]["items"]["#{@Eth_Etherbase}"] %>
        - name: geth-boot-node-persistent-storage
          mountPath: /etc/testnet/bootnode
        - name: genesis-config-persistent-storage
          mountPath: /etc/geth/genesis/genesis-geth.json
          subPath: genesis-geth.json
      volumes:
      - name: keystore-config-persistent-storage
        configMap:
          name: keystore-config-<%= @Node_UserIdent %>
          items:
          - key: <%= @config["keystore"]["items"]["#{@Eth_Etherbase}"] %>
            path: <%= @config["keystore"]["items"]["#{@Eth_Etherbase}"] %>
<%- unless @config["geth"]["network"]["public"] -%>
      - name: geth-boot-node-persistent-storage
        hostPath:
          path: /var/lib/docker/geth-storage/bootnode
      - name: genesis-config-persistent-storage
        configMap:
          name: genesis-config
          items:
          - key: genesis-geth.json
            path: genesis-geth.json
      - name: <%= @Node_UserIdent %>-persistent-storage
        persistentVolumeClaim:
          claimName: volume-<%= @Node_UserIdent %>
      - name: <%= @Node_UserIdent %>-config-persistent-storage
        configMap:
          name: gethconfig-<%= @Node_UserIdent %>
          items:
          - key: gethconfig
            path: gethconfig.toml
<% end %>
<% end -%>
<% end -%>
