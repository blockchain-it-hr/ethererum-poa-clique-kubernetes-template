<%
def set_node_template_vars(values)
  @Eth_Etherbase         = values["geth"]["Eth_Etherbase"]
  @Eth_Password          = values["geth"]["Eth_Password"]
  @Node_UserIdent        = values["geth"]["Node_UserIdent"]
  @Node_DataDir          = values["geth"]["Node_DataDir"]
  @Node_HTTPPort         = values["geth"]["Node_HTTPPort"]
  @Node_WSPort           = values["geth"]["Node_WSPort"]
  @NodeP2P_ListenAddr    = values["geth"]["NodeP2P_ListenAddr"]
  @NodeP2P_DiscoveryAddr = values["geth"]["NodeP2P_DiscoveryAddr"]
  @Dashboard_Port        = values["geth"]["Dashboard_Port"]
  @Dashboard_Refresh     = values["geth"]["Dashboard_Refresh"]
  @nodePort_rpc          = values["k8s"]["nodePort_rpc"]
  @nodePort_ipc          = values["k8s"]["nodePort_ipc"]
  @replicas              = values["k8s"]["replicas"]
  @External_RPC_IP       = values["k8s"]["External_RPC_IP"]
  @Nodekeyhex            = values["k8s"]["nodekeyhex"]
  @Verbosity             = values["k8s"]["verbosity"]
  return
end
-%>
<%- @bootnodes.each do |bootnode| -%>
<%= set_node_template_vars(bootnode.values.first) -%>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keystore-config-<%= @Node_UserIdent %>
  namespace: default
  labels:
    app: kuberneteth
    name: keystore-config-<%= @Node_UserIdent %>
data:
  <%= @config["keystore"]["items"]["#{@Eth_Etherbase}"] %>: |-
<%- File.readlines("keystore/#{@config["keystore"]["items"]["#{@Eth_Etherbase}"]}").each do |line| -%>
    <%= line -%>
<% end -%>
<% end -%>
<%- @bootnodes.each do |bootnode| -%>
<%= set_node_template_vars(bootnode.values.first) -%>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gethconfig-<%= @Node_UserIdent %>
  namespace: default
  labels:
    app: kuberneteth
    name: gethconfig-<%= @Node_UserIdent %>
data:
  gethconfig: |-
<%- File.readlines("#{@Node_UserIdent}.toml").each do |line| -%>
    <%= line -%>
<% end -%>
<% end %>
---
apiVersion: v1
kind: Service
metadata:
  name: geth-bootnode-svc
  labels:
    app: kuberneteth
    tier: backend
    name: geth-bootnode-svc
spec:
  selector:
    app: kuberneteth
    tier: backend
    name: bootnode
  ports:
    - name: geth-bootnode-ipc-discovery
      protocol: UDP
      port: <%= @NodeP2P_DiscoveryAddr %>
      targetPort: <%= @NodeP2P_DiscoveryAddr %>
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: geth-boot-node-setup-pod
  labels:
    app: kuberneteth
    name: bootnode-setup-pod
spec:
  template:
    metadata:
      labels:
        app: kuberneteth
        name: bootnode-setup-pod
    spec:
      containers:
      - name: geth-boot-node-setup-container
        image: ijsfd/geth-node:latest
        imagePullPolicy: IfNotPresent
        command: [ "sh" ]
        args:
        - "-cx"
        - "cd <%= @Node_DataDir %>;
           echo \"enode://$(/bootnode -nodekeyhex <%= @Nodekeyhex %> -writeaddress)@$GETH_BOOTNODE_SVC_SERVICE_HOST:<%= @NodeP2P_DiscoveryAddr %>\" > enode.address;
           set +x;
           while true; do :; done;"
        volumeMounts:
        - name: geth-boot-node-persistent-storage
          mountPath: <%= @Node_DataDir %>
      volumes:
      - name: geth-boot-node-persistent-storage
        hostPath:
          path: /var/lib/docker/geth-storage/bootnode
---
apiVersion: v1
kind: Pod
metadata:
  name: geth-boot-node-pod
  labels:
    app: kuberneteth
    name: geth-bootnode-pod
spec:
  containers:
  - name: geth-boot-node-container
    image: ijsfd/geth-node:latest
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: <%= @NodeP2P_ListenAddr %>
      - containerPort: <%= @NodeP2P_DiscoveryAddr %>
        protocol: UDP
    command: [ "sh" ]
    args:
    - "-c"
    - "cd <%= @Node_DataDir %>;
       /geth --datadir <%= @Node_DataDir %> init /etc/geth/genesis/genesis-geth.json;
       /bootnode --nodekeyhex <%= @Nodekeyhex %> --addr \":<%= @NodeP2P_DiscoveryAddr %>\" --nat any --verbosity <%= @Verbosity %>;"
    volumeMounts:
    - name: geth-boot-node-persistent-storage
      mountPath: <%= @Node_DataDir %>
    - name: genesis-config-persistent-storage
      mountPath: /etc/geth/genesis/genesis-geth.json
      subPath: genesis-geth.json
  volumes:
  - name: geth-boot-node-persistent-storage
    hostPath:
      path: /var/lib/docker/geth-storage/bootnode
  - name: genesis-config-persistent-storage
    configMap:
      name: genesis-config
      items:
      - key: genesis-geth.json
        path: genesis-geth.json
---