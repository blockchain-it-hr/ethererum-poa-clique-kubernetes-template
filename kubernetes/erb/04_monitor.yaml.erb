<%
def set_node_template_vars(values)
  @Eth_Etherbase         = values["geth"]["Eth_Etherbase"]
  @Eth_Password          = values["geth"]["Eth_Password"]
  @Node_UserIdent        = values["geth"]["Node_UserIdent"]
  @Node_DataDir          = values["geth"]["Node_DataDir"]
  @Node_HTTPPort         = values["geth"]["Node_HTTPPort"]
  @Node_WSPort           = values["geth"]["Node_WSPort"]
  @NodeP2P_ListenAddr    = values["geth"]["NodeP2P_ListenAddr"]
  @NodeP2P_DiscoveryAddr = values["geth"]["NodeP2P_DiscoveryAddr"]
  @Dashboard_Port        = values["geth"]["Dashboard_Port"]
  @Dashboard_Refresh     = values["geth"]["Dashboard_Refresh"]
  @replicas              = values["k8s"]["replicas"]
  @External_RPC_IP       = values["k8s"]["External_RPC_IP"]
  return
end
-%>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitor-config
  namespace: default
  labels:
    app: kuberneteth
    name: monitor-config
data:
  app.json: |-
    [
<%- @nodes.each_with_index do |node, index| -%>
<%= set_node_template_vars(node.values.first) -%>
      {
        "name"              : "<%= @Node_UserIdent %>",
        "cwd"               : ".",
        "script"            : "app.js",
        "log_date_format"   : "YYYY-MM-DD HH:mm Z",
        "merge_logs"        : false,
        "watch"             : false,
        "exec_interpreter"  : "node",
        "exec_mode"         : "fork_mode",
        "env":
        {
          "NODE_ENV"        : "production",
          "RPC_HOST"        : "<%= @Node_UserIdent %>-rpchost",
          "RPC_PORT"        : "<%= @Node_HTTPPort %>",
          "LISTENING_PORT"  : "<%= @NodeP2P_DiscoveryAddr %>",
          "INSTANCE_NAME"   : "<%= @Node_UserIdent %>",
          "CONTACT_DETAILS" : "",
          "WS_SERVER"       : "localhost:3001",
          "WS_SECRET"       : "<%= @config["monitor"]["ws_secret"] %>",
          "VERBOSITY"       : <%= @config["monitor"]["verbosity"] %>
        }
<%- if index == @nodes.length-1 -%>
      }
<% else -%>
      },
<% end -%>
<% end -%>
    ]
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: <%= @config["monitor"]["name"] %>-svc
  labels:
    app: kuberneteth
    tier: frontend
    name: <%= @config["monitor"]["name"] %>-svc
spec:
  selector:
    app: kuberneteth
    tier: frontend
<%- if @config["monitor"]["k8s"]["nodePort"] -%>
  type: LoadBalancer
<% end -%>
  ports:
    - name: <%= @config["monitor"]["name"] %>-port
      protocol: TCP
      port: 3001
<%- if @config["monitor"]["k8s"]["nodePort"] -%>
      nodePort: <%= @config["monitor"]["k8s"]["nodePort"] %>
<% end -%>
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: default
  name: <%= @config["monitor"]["name"] %>
spec:
  selector:
    matchLabels:
      app: kuberneteth
  replicas: 1
  serviceName: monitor
  template:
    metadata:
      name: <%= @config["monitor"]["name"] %>
      labels:
        app: kuberneteth
        tier: frontend
        name: <%= @config["monitor"]["name"] %>
    spec:
      initContainers:
      - name: <%= @config["monitor"]["name"] %>-init-container
        image: ijsfd/eth-netstats
        imagePullPolicy: IfNotPresent
        command: [ "sh" ]
        args:
        - "-cx"
        - "cp -r /eth-net-intelligence-api/* /ethmonitor;
           cp /monitor-configmap/app.json /ethmonitor/app.json;
<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node.values.first) -%>
           sed -i \"s/<%= @Node_UserIdent %>-rpchost/$<%= @Node_UserIdent.upcase %>_SVC_SERVICE_HOST/g\" /ethmonitor/app.json;
<% end -%>
           exit 0;"
        volumeMounts:
        - name: monitor-configmap-volume
          mountPath: /monitor-configmap/app.json
          subPath: app.json
          # we need to mount an extra volume to be able to change a value in the configmap
        - name: monitor-config-persistent-storage
          mountPath: /ethmonitor
      containers:
      - name: eth-netstats-container
        image: ijsfd/eth-netstats
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3001
        env:
        - name: WS_SECRET
          value: "<%= @config["monitor"]["ws_secret"] %>"
        - name: PORT
          value: "3001"
      - name: eth-net-intelligence-api-container
        image: ijsfd/eth-net-intelligence-api
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: monitor-config-persistent-storage
          mountPath: /eth-net-intelligence-api/app.json
          subPath: app.json
      volumes:
      - name: monitor-configmap-volume
        configMap:
          name: monitor-config
          items:
          - key: app.json
            path: app.json
      - name: monitor-config-persistent-storage
        persistentVolumeClaim:
          claimName: volume-ethmonitor
---
